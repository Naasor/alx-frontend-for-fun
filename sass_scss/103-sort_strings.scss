/* Sort */
@import '103-sort_list.scss';

/* Custom sort function using quicksort algorithm */
@function compare($a, $b) {
  @if str-length($a) != str-length($b) {
    @return str-length($a) < str-length($b);
  } @else {
    @for $i from 1 through str-length($a) {
      @if str-slice($a, $i, $i) != str-slice($b, $i, $i) {
        @return str-slice($a, $i, $i) < str-slice($b, $i, $i);
      }
    }
    @return false; // If all characters are equal, they are considered the same
  }
}

@function sort($list) {
  @if length($list) < 2 {
    @return $list;
  }

  $pivot: nth($list, 1);
  $rest: ();
  @for $i from 2 through length($list) {
    $rest: append($rest, nth($list, $i));
  }

  $left: ();
  $right: ();
  @each $item in $rest {
    @if compare($item, $pivot) {
      $left: append($left, $item);
    } @else {
      $right: append($right, $item);
    }
  }

  @return join(join(sort($left), $pivot, comma), sort($right), comma);
}

$list_sorted: sort($list_to_sort);

@debug $list_to_sort;